name: Release Events

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run tests against'
        type: environment
        required: true

permissions:
  id-token: write
  deployments: write

jobs:
  deploy-dev:
    name: Deploy to staging
    runs-on: ubuntu-latest
    if: github.event.release.prerelease == true
    environment:
      name: dev
      url: https://raster.dev.utah.gov

    steps:
      - name: ðŸš€ Deploy
        uses: agrc/firebase-website-deploy-composite-action@v1
        with:
          identity-provider: ${{ secrets.IDENTITY_PROVIDER }}
          service-account-email: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
          project-id: ${{ secrets.PROJECT_ID }}
          prebuild-command: npx grunt bump --setversion=${{ needs.release.outputs.released_version }}
          build-command: npm run build:stage

  deploy-prod:
    name: Deploy to production
    runs-on: ubuntu-latest
    if: github.event.release.prerelease == false
    environment:
      name: prod
      url: https://raster.utah.gov

    steps:
      - name: ðŸš€ Deploy
        uses: agrc/firebase-website-deploy-composite-action@v1
        with:
          identity-provider: ${{ secrets.IDENTITY_PROVIDER }}
          service-account-email: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
          prebuild-command: npx grunt bump --setversion=${{ needs.release.outputs.released_version }}
          project-id: ${{ secrets.PROJECT_ID }}
          build-command: npm run build:prod
          service-now-instance: ${{ secrets.SN_INSTANCE }}
          service-now-table: ${{ secrets.SN_TABLE }}
          service-now-system-id: ${{ secrets.SN_SYS_ID }}
          service-now-username: ${{ secrets.SN_USERNAME }}
          service-now-password: ${{ secrets.SN_PASSWORD }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}

  notify:
    name: Notifications
    needs: deploy-prod
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write

    steps:
      - name: Release Notifier
        uses: agrc/release-issue-notifications-action@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
